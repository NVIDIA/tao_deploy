# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nvidia_tao_deploy/cv/common/proto/detection_sequence_dataset_config.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nInvidia_tao_deploy/cv/common/proto/detection_sequence_dataset_config.proto\"s\n\nDataSource\x12\x1c\n\x14label_directory_path\x18\x01 \x01(\t\x12\x1c\n\x14image_directory_path\x18\x02 \x01(\t\x12\x11\n\troot_path\x18\x03 \x01(\t\x12\x16\n\x0etfrecords_path\x18\x04 \x01(\t\"\x96\x02\n\rDatasetConfig\x12!\n\x0c\x64\x61ta_sources\x18\x01 \x03(\x0b\x32\x0b.DataSource\x12\x44\n\x14target_class_mapping\x18\x02 \x03(\x0b\x32&.DatasetConfig.TargetClassMappingEntry\x12,\n\x17validation_data_sources\x18\x03 \x03(\x0b\x32\x0b.DataSource\x12%\n\x1dinclude_difficult_in_training\x18\x04 \x01(\x08\x12\x0c\n\x04type\x18\x05 \x01(\t\x1a\x39\n\x17TargetClassMappingEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'nvidia_tao_deploy.cv.common.proto.detection_sequence_dataset_config_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DATASETCONFIG_TARGETCLASSMAPPINGENTRY._options = None
  _DATASETCONFIG_TARGETCLASSMAPPINGENTRY._serialized_options = b'8\001'
  _DATASOURCE._serialized_start=77
  _DATASOURCE._serialized_end=192
  _DATASETCONFIG._serialized_start=195
  _DATASETCONFIG._serialized_end=473
  _DATASETCONFIG_TARGETCLASSMAPPINGENTRY._serialized_start=416
  _DATASETCONFIG_TARGETCLASSMAPPINGENTRY._serialized_end=473
# @@protoc_insertion_point(module_scope)
