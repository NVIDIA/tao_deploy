# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nvidia_tao_deploy/cv/faster_rcnn/proto/training.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from nvidia_tao_deploy.cv.common.proto import visualizer_config_pb2 as nvidia__tao__deploy_dot_cv_dot_common_dot_proto_dot_visualizer__config__pb2
from nvidia_tao_deploy.cv.faster_rcnn.proto import regularizer_config_pb2 as nvidia__tao__deploy_dot_cv_dot_faster__rcnn_dot_proto_dot_regularizer__config__pb2
from nvidia_tao_deploy.cv.faster_rcnn.proto import optimizer_pb2 as nvidia__tao__deploy_dot_cv_dot_faster__rcnn_dot_proto_dot_optimizer__pb2
from nvidia_tao_deploy.cv.faster_rcnn.proto import learning_rate_pb2 as nvidia__tao__deploy_dot_cv_dot_faster__rcnn_dot_proto_dot_learning__rate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n5nvidia_tao_deploy/cv/faster_rcnn/proto/training.proto\x1a\x39nvidia_tao_deploy/cv/common/proto/visualizer_config.proto\x1a?nvidia_tao_deploy/cv/faster_rcnn/proto/regularizer_config.proto\x1a\x36nvidia_tao_deploy/cv/faster_rcnn/proto/optimizer.proto\x1a:nvidia_tao_deploy/cv/faster_rcnn/proto/learning_rate.proto\"E\n\rEarlyStopping\x12\x0f\n\x07monitor\x18\x01 \x01(\t\x12\x11\n\tmin_delta\x18\x02 \x01(\x02\x12\x10\n\x08patience\x18\x03 \x01(\r\"\xc3\x07\n\x0eTrainingConfig\x12\x1b\n\x13\x65nable_augmentation\x18\x30 \x01(\x08\x12\x1c\n\x14retrain_pruned_model\x18\x03 \x01(\t\x12\x1a\n\x12pretrained_weights\x18\n \x01(\t\x12\x19\n\x11resume_from_model\x18/ \x01(\t\x12\x17\n\x0frpn_min_overlap\x18\x04 \x01(\x02\x12\x17\n\x0frpn_max_overlap\x18\x05 \x01(\x02\x12\x1e\n\x16\x63lassifier_min_overlap\x18\x06 \x01(\x02\x12\x1e\n\x16\x63lassifier_max_overlap\x18\x07 \x01(\x02\x12\x11\n\tgt_as_roi\x18& \x01(\x08\x12\x13\n\x0bstd_scaling\x18\x08 \x01(\x02\x12\x43\n\x13\x63lassifier_regr_std\x18\t \x03(\x0b\x32&.TrainingConfig.ClassifierRegrStdEntry\x12\x1a\n\x12\x62\x61tch_size_per_gpu\x18. \x01(\r\x12\x12\n\nnum_epochs\x18\x0b \x01(\r\x12\x14\n\x0coutput_model\x18\r \x01(\t\x12\x1b\n\x13\x63heckpoint_interval\x18\x31 \x01(\r\x12\x19\n\x11rpn_pre_nms_top_N\x18# \x01(\r\x12\x16\n\x0erpn_mini_batch\x18$ \x01(\r\x12\x19\n\x11rpn_nms_max_boxes\x18\x10 \x01(\r\x12!\n\x19rpn_nms_overlap_threshold\x18\x11 \x01(\x02\x12\'\n\x0bregularizer\x18\x14 \x01(\x0b\x32\x12.RegularizerConfig\x12#\n\toptimizer\x18+ \x01(\x0b\x32\x10.OptimizerConfig\x12 \n\rlearning_rate\x18- \x01(\x0b\x32\t.LRConfig\x12\x17\n\x0flambda_rpn_regr\x18\' \x01(\x02\x12\x18\n\x10lambda_rpn_class\x18( \x01(\x02\x12\x17\n\x0flambda_cls_regr\x18) \x01(\x02\x12\x18\n\x10lambda_cls_class\x18* \x01(\x02\x12\x12\n\nenable_qat\x18\x32 \x01(\x08\x12\x19\n\x11model_parallelism\x18\x33 \x03(\x02\x12&\n\x0e\x65\x61rly_stopping\x18\x34 \x01(\x0b\x32\x0e.EarlyStopping\x12%\n\nvisualizer\x18\x35 \x01(\x0b\x32\x11.VisualizerConfig\x1a\x38\n\x16\x43lassifierRegrStdEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'nvidia_tao_deploy.cv.faster_rcnn.proto.training_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TRAININGCONFIG_CLASSIFIERREGRSTDENTRY._options = None
  _TRAININGCONFIG_CLASSIFIERREGRSTDENTRY._serialized_options = b'8\001'
  _EARLYSTOPPING._serialized_start=297
  _EARLYSTOPPING._serialized_end=366
  _TRAININGCONFIG._serialized_start=369
  _TRAININGCONFIG._serialized_end=1332
  _TRAININGCONFIG_CLASSIFIERREGRSTDENTRY._serialized_start=1276
  _TRAININGCONFIG_CLASSIFIERREGRSTDENTRY._serialized_end=1332
# @@protoc_insertion_point(module_scope)
